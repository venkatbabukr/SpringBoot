spring:
  application.name: springcloud-demo-service1
server:
  port: 8081
management:
  info:
    java.enabled: true
    env.enabled: true
  health:
    circuitbreakers.enabled: true
  endpoint:
    health:
      show-details: always
  endpoints.web:
    # URL to access: http://{host}/actuator
    exposure.include: "*"
eureka:
  instance:
    hostname: localhost
# For more on feign, refer these URLs:
# https://cloud.spring.io/spring-cloud-openfeign/reference/html/
# https://arnoldgalovics.com/feign-fallback/
feign:
  circuitbreaker:
    enabled: true
    # Check this blog post: https://medium.com/bliblidotcom-techblog/spring-cloud-circuit-breaker-implementation-using-resilience4j-and-spring-open-feign-734d0fd34e37
    alphanumeric-ids.enabled: true
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000
        # To get logs, we need to set this property as well as SLF4J logging levels
        # for packages containing the feign clients.
        loggerLevel: full
        decode404: true
        #errorDecoder: com.example.SimpleErrorDecoder
        #retryer: com.example.SimpleRetryer
        #requestInterceptors:
        #  - com.example.FooRequestInterceptor
        #  - com.example.BarRequestInterceptor
        #encoder: com.example.SimpleEncoder
        #decoder: com.example.SimpleDecoder
        #contract: com.example.SimpleContract
  compression:
    request.enabled: true
    response.enabled: true
resilience4j:
  circuitbreaker:
    configs:
      # URLs that can be accessed:
      # http://{host}/actuator/metrics
      # http://{host}/actuator/health
      # http://{host}/actuator/circuitbreakers
      default:
        registerHealthIndicator: true            # Log all health metrics.
        failureRateThreshold: 30                 # Configures the failure rate threshold in percentage. When the failure rate is equal or greater than the threshold the CircuitBreaker transitions to open and starts short-circuiting calls.
        slowCallRateThreshold: 50                # Configures a threshold in percentage. The CircuitBreaker considers a call as slow when the call duration is greater than slowCallDurationThreshold
        slowCallDurationThreshold: PT5S          # Configures the duration threshold above which calls are considered as slow and increase the rate of slow calls.
        permittedNumberOfCallsInHalfOpenState: 3 # Configures the number of permitted calls when the CircuitBreaker is half open.
        slidingWindowType: COUNT_BASED           # If the sliding window is COUNT_BASED, the last slidingWindowSize calls are recorded and aggregated.
        slidingWindowSize: 10                    # Configures the size of the sliding window which is used to record the outcome of calls when the CircuitBreaker is closed.
        minimumNumberOfCalls: 2                  # Configures the minimum number of calls which are required (per sliding window period) before the CircuitBreaker can calculate the error rate or slow call rate.
        waitDurationInOpenState: PT5S            # The time that the CircuitBreaker should wait before transitioning from open to half-open.
        recordExceptions:                        # A list of exceptions that are recorded as a failure and thus increase the failure rate. Any exception matching or inheriting from one of the list counts as a failure, unless explicitly ignored via ignoreExceptions.
        ignoreExceptions:                        # A list of exceptions that are ignored and neither count as a failure nor success. Any exception matching or inheriting from one of the list will not count as a failure nor success, even if the exceptions is part of recordExceptions
    #instances:
    #  demoServiceCircuitBreaker:
    #    baseConfig: default
logging.level:
  venkat.springcloud.simple.feign.client: DEBUG